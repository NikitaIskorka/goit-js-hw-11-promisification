{"version":3,"sources":["js/1.js","js/2.js","js/3.js","index.js"],"names":["delay","ms","Promise","resolve","reject","setTimeout","logger","time","console","log","then","users","name","active","toggleUserState","allUsers","userName","map","user","updatedUsers","table","randomIntegerFromInterval","min","max","Math","floor","random","makeTransaction","transaction","id","logSuccess","logError","warn","amount","catch"],"mappings":";;;AAAA,IAAMA,EAAQ,SAAAC,GAED,OAAA,IAAIC,QAAQ,SAACC,EAASC,GACzBC,WAAW,WACPF,EAAQF,IACTA,MAKPK,EAAS,SAAAC,GAAQC,OAAAA,QAAQC,IAAsBF,kBAAAA,OAAAA,EAAlC,QAGnBP,EAAM,KAAMU,KAAKJ,GACjBN,EAAM,KAAMU,KAAKJ,GACjBN,EAAM,MAAMU,KAAKJ;;ACQjB,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,KAAA,GAAA,GAAA,OAAA,sBAAA,CAAA,IAAA,EAAA,OAAA,sBAAA,GAAA,IAAA,EAAA,EAAA,OAAA,SAAA,GAAA,OAAA,OAAA,yBAAA,EAAA,GAAA,cAAA,EAAA,KAAA,MAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,CAAA,IAAA,EAAA,MAAA,UAAA,GAAA,UAAA,GAAA,GAAA,EAAA,EAAA,EAAA,OAAA,IAAA,GAAA,QAAA,SAAA,GAAA,EAAA,EAAA,EAAA,EAAA,MAAA,OAAA,0BAAA,OAAA,iBAAA,EAAA,OAAA,0BAAA,IAAA,EAAA,OAAA,IAAA,QAAA,SAAA,GAAA,OAAA,eAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAvBA,IAAMK,EAAQ,CACZ,CAAEC,KAAM,QAASC,QAAQ,GACzB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,MAAOC,QAAQ,IAGnBC,EAAkB,SAACC,EAAUC,GAExB,OAAA,IAAId,QAAQ,SAACC,EAASC,GACzBD,EAASY,EAASE,IAAI,SAAAC,GAC1BA,OAAAA,EAAKN,OAASI,EAAgBE,EAAAA,EAAAA,GAAAA,GAA9B,GAAA,CAAoCL,QAASK,EAAKL,SAAWK,QAQ3DZ,EAAS,SAAAa,GAAgBX,OAAAA,QAAQY,MAAMD,IAG7CL,EAAgBH,EAAO,SAASD,KAAKJ,GACrCQ,EAAgBH,EAAO,OAAOD,KAAKJ;;ACvBlC,IAAMe,EAA4B,SAACC,EAAKC,GAChCC,OAAAA,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,IAGhDK,EAAkB,SAACC,GACf5B,IAAAA,EAAQqB,EAA0B,IAAK,KAEtC,OAAA,IAAInB,QAAQ,SAACC,EAASC,GAC7BC,WAAW,WACQmB,KAAKE,SAAW,IAGlCvB,EAAQ,CAAC0B,GAAID,EAAYC,GAAItB,KAAMP,IAEnCI,EAAOwB,EAAYC,KACnB7B,MAKC8B,EAAa,SAAgB,GAAdD,IAAAA,EAAAA,EAAAA,GAAItB,EAAAA,EAAAA,KAErBC,QAAQC,IAAsBoB,kBAAAA,OAAAA,EAAmBtB,kBAAAA,OAAAA,EAAS,MAAA,kBAGxDwB,EAAW,SAAAF,GACbrB,QAAQwB,KAAyCH,oCAAAA,OAAAA,EAA+B,6BAAA,cAIpFF,EAAgB,CAAEE,GAAI,GAAII,OAAQ,MAC/BvB,KAAKoB,GACLI,MAAMH,GAETJ,EAAgB,CAAEE,GAAI,GAAII,OAAQ,MAC/BvB,KAAKoB,GACLI,MAAMH,GAETJ,EAAgB,CAAEE,GAAI,GAAII,OAAQ,KAC/BvB,KAAKoB,GACLI,MAAMH,GAETJ,EAAgB,CAAEE,GAAI,GAAII,OAAQ,MAC/BvB,KAAKoB,GACLI,MAAMH;;ACzCT,aAHA,QAAA,oBACA,QAAA,UACA,QAAA,UACA,QAAA","file":"src.a45ac38a.js","sourceRoot":"../src","sourcesContent":["const delay = ms => {\n \n      return new Promise((resolve, reject) => {\n          setTimeout(() => {\n              resolve(ms)\n          }, ms);\n      });\n \n};\n\nconst logger = time => console.log(`Resolved after ${time}ms`);\n\n// Вызовы функции для проверки\ndelay(2000).then(logger); // Resolved after 2000ms\ndelay(1000).then(logger); // Resolved after 1000ms\ndelay(1500).then(logger); // Resolved after 1500ms ","const users = [\n  { name: 'Mango', active: true },\n  { name: 'Poly', active: false },\n  { name: 'Ajax', active: true },\n  { name: 'Lux', active: false },\n];\n\nconst toggleUserState = (allUsers, userName) => {\n\n    return new Promise((resolve, reject) => {\n        resolve (allUsers.map(user =>\n    user.name === userName ? { ...user, active: !user.active } : user,\n  ))\n    })\n  \n\n  \n};\n\nconst logger = updatedUsers => console.table(updatedUsers);\n\n\ntoggleUserState(users, 'Mango').then(logger);\ntoggleUserState(users, 'Lux').then(logger);  "," const randomIntegerFromInterval = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nconst makeTransaction = (transaction) => {\n    const delay = randomIntegerFromInterval(200, 500);\n   \n    return new Promise((resolve, reject) => {\n    setTimeout(() => {\n    const canProcess = Math.random() > 0.3;\n\n    if (canProcess) {\n     resolve({id: transaction.id, time: delay});\n    } \n     reject(transaction.id)\n  }, delay);\n})\n  \n};\n\nconst logSuccess = ({id, time}) => {\n   \n    console.log(`%c Transaction ${id} processed in ${time}ms`,'color : green');\n};\n\nconst logError = id => {\n    console.warn(` %c Error processing transaction ${id}. Please try again later.`, 'color:red');\n};\n\n\nmakeTransaction({ id: 70, amount: 150 })\n  .then(logSuccess)\n  .catch(logError);\n\nmakeTransaction({ id: 71, amount: 230 })\n  .then(logSuccess)\n  .catch(logError);\n\nmakeTransaction({ id: 72, amount: 75 })\n  .then(logSuccess)\n  .catch(logError);\n\nmakeTransaction({ id: 73, amount: 100 })\n  .then(logSuccess)\n  .catch(logError); ","import './sass/main.scss';\nimport './js/1'\nimport './js/2'\nimport './js/3'"]}